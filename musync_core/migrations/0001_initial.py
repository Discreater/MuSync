# Generated by Django 2.2.1 on 2019-05-31 04:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('open_state', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'db_table': 'collection_list',
            },
        ),
        migrations.CreateModel(
            name='CurrentList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.DateTimeField()),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('is_active', models.IntegerField()),
            ],
            options={
                'db_table': 'current_list',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.DateTimeField()),
                ('musync_time', models.IntegerField(default=0)),
                ('tag', models.CharField(blank=True, max_length=1023, null=True)),
                ('remark', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'friend',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('create_time', models.DateTimeField()),
                ('tag', models.CharField(blank=True, max_length=1023, null=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release', models.CharField(blank=True, max_length=255, null=True)),
                ('artist_name', models.CharField(blank=True, max_length=45, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('artist_hotness', models.FloatField(blank=True, null=True)),
                ('publish_year', models.IntegerField(blank=True, null=True)),
                ('is_cached', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'song',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('password', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('real_name', models.CharField(blank=True, max_length=45, null=True)),
                ('gender', models.CharField(blank=True, max_length=45, null=True)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('signature', models.CharField(blank=True, max_length=511, null=True)),
                ('is_online', models.IntegerField()),
                ('is_stealth', models.IntegerField()),
                ('friends', models.ManyToManyField(through='musync_core.Friend', to='musync_core.User')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='GroupHasUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.User')),
            ],
            options={
                'db_table': 'group_has_user',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator', to='musync_core.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='current_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='current_user', to='musync_core.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='users',
            field=models.ManyToManyField(through='musync_core.GroupHasUser', to='musync_core.User'),
        ),
        migrations.AddField(
            model_name='friend',
            name='friend',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='to_friend', to='musync_core.User'),
        ),
        migrations.AddField(
            model_name='friend',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='from_user', to='musync_core.User'),
        ),
        migrations.CreateModel(
            name='CurrentListHasSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_playing', models.IntegerField()),
                ('order', models.IntegerField()),
                ('play_time', models.DateTimeField(blank=True, null=True)),
                ('current_list', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.CurrentList')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.Song')),
            ],
            options={
                'db_table': 'current_list_has_song',
            },
        ),
        migrations.AddField(
            model_name='currentlist',
            name='songs',
            field=models.ManyToManyField(through='musync_core.CurrentListHasSong', to='musync_core.Song'),
        ),
        migrations.AddField(
            model_name='currentlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.User'),
        ),
        migrations.CreateModel(
            name='CollectionListHasSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField()),
                ('collection_list', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.CollectionList')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.Song')),
            ],
            options={
                'db_table': 'collection_list_has_song',
            },
        ),
        migrations.AddField(
            model_name='collectionlist',
            name='songs',
            field=models.ManyToManyField(through='musync_core.CollectionListHasSong', to='musync_core.Song'),
        ),
        migrations.AddField(
            model_name='collectionlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='musync_core.User'),
        ),
    ]
